@page "/books/{Id:int}"
@using BookCatalog.Client.Services
@using BookCatalog.Shared
@inject BookService BookService
@inject NavigationManager NavigationManager

<PageTitle>Детали книги</PageTitle>

<div class="container">
    @if (loading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Загрузка...</span>
            </div>
        </div>
    }
    else if (book == null)
    {
        <div class="alert alert-danger">
            <h3>Ошибка</h3>
            <p>Книга не найдена.</p>
            <button class="btn btn-primary" @onclick="@(() => NavigationManager.NavigateTo("books"))">
                Вернуться к списку
            </button>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h1>@book.Title</h1>
                <div>
                    <button class="btn btn-primary" @onclick="@(() => NavigationManager.NavigateTo($"books/edit/{Id}"))">
                        <span class="oi oi-pencil" aria-hidden="true"></span> Редактировать
                    </button>
                    <button class="btn btn-secondary" @onclick="@(() => NavigationManager.NavigateTo("books"))">
                        <span class="oi oi-arrow-left" aria-hidden="true"></span> Назад к списку
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <dl class="row">
                            <dt class="col-sm-3">Автор</dt>
                            <dd class="col-sm-9">@book.Author</dd>

                            <dt class="col-sm-3">Жанр</dt>
                            <dd class="col-sm-9">@book.Genre</dd>

                            <dt class="col-sm-3">Год публикации</dt>
                            <dd class="col-sm-9">@(book.PublicationYear?.ToString() ?? "Не указан")</dd>

                            <dt class="col-sm-3">ISBN</dt>
                            <dd class="col-sm-9">@(string.IsNullOrEmpty(book.ISBN) ? "Не указан" : book.ISBN)</dd>

                            <dt class="col-sm-3">Описание</dt>
                            <dd class="col-sm-9">
                                @if (string.IsNullOrEmpty(book.Description))
                                {
                                    <em>Описание отсутствует</em>
                                }
                                else
                                {
                                    @book.Description
                                }
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">Информация</div>
                            <div class="card-body">
                                <p><strong>Добавлено:</strong> @book.CreatedAt.ToString("dd.MM.yyyy HH:mm")</p>
                                @if (book.UpdatedAt.HasValue)
                                {
                                    <p><strong>Обновлено:</strong> @book.UpdatedAt.Value.ToString("dd.MM.yyyy HH:mm")</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Book? book;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadBook();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadBook();
    }

    private async Task LoadBook()
    {
        loading = true;
        try
        {
            book = await BookService.GetBookByIdAsync(Id);
        }
        finally
        {
            loading = false;
        }
    }
} 